@model Project_Job_Portal.ViewModels.CandidateInputModel
@using (Ajax.BeginForm("Create",
    "Candidates", new { },
    new AjaxOptions
    {
        HttpMethod = "POST",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "form-div",
        OnSuccess = "onSuccess"
    },
    new { id = "frm", enctype = "multipart/form-data" }))
{
    <h3>Add new Candidate</h3>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.DepartmentId, new { @class = "col-from-label col-2 text-end" })
        <div class="col-4">
            @Html.DropDownListFor(x => x.DepartmentId, new SelectList(ViewBag.Departments, "DepartmentId", "DepartmentName"), "Select Department", new { @class = "form-select" })
            @Html.ValidationMessageFor(x => x.DepartmentId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.CandidateName, new { @class = "col-form-label col-2 text-end" })
        <div class="col-4">
            @Html.TextBoxFor(x => x.CandidateName, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.CandidateName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.BirthDate, new { @class = "col-from-label col-2 text-end" })
        <div class="col-4">
            @Html.TextBoxFor(x => x.BirthDate, new { @class = "form-control", type = "date", @Value = DateTime.Today.ToString("yyyy-MM-dd") })
            @Html.ValidationMessageFor(x => x.BirthDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.AppliedFor, new { @class = "col-form-label col-2 text-end" })
        <div class="col-4">
            @Html.EnumDropDownListFor(x => x.AppliedFor, new { @class = "form-select form-control-sm" })
            @Html.ValidationMessageFor(x => x.AppliedFor, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.ExpectedSalary, new { @class = "col-from-label col-2 text-end" })
        <div class="col-4">
            @Html.TextBoxFor(x => x.ExpectedSalary, new { @class = "form-control",type="number" })
            @Html.ValidationMessageFor(x => x.ExpectedSalary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.Picture, new { @class = "col-form-label col-2 text-end" })
        <div class="col-4">
            @Html.TextBoxFor(x => x.Picture, new { @class = "form-control", type = "file" })
            @Html.ValidationMessageFor(x => x.Picture, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row mb-1">

        @Html.LabelFor(x => x.Conditions, new { @class = "col-form-label col-form-label-sm col-2 text-end" })
        <div class="col-4">
            @Html.CheckBoxFor(x => x.Conditions)
            @Html.ValidationMessageFor(x => x.Conditions, "", new { @class = "text-danger", style = "font-size:small" })
        </div>
    </div>
    <div class="form-group row">
        <div class="col-4 offset-2">
            <div class="d-flex justify-content-between">
                <h4>Qualifications</h4>
                <button class="btn btn-sm" type="submit" name="act" value="add" formnovalidate>Add</button>
            </div>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Degree</th>
                        <th>Institute</th>
                        <th>Passing Year</th>
                        <th>Result</th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.Qualifications.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.TextBoxFor(x => Model.Qualifications[i].Degree, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => Model.Qualifications[i].Degree, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.TextBoxFor(x => Model.Qualifications[i].Institute, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => Model.Qualifications[i].Institute, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.TextBoxFor(x => Model.Qualifications[i].PassingYear, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => Model.Qualifications[i].PassingYear, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.TextBoxFor(x => Model.Qualifications[i].Result, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => Model.Qualifications[i].Result, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                <button name="act" value="remove_@i" type="submit" class="btn btn-danger btn-sm" formnovalidate>Remove</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="form-group row mb-1">

        <div class="col-4 offset-2">
            <button type="submit" name="act" value="insert" class="btn btn-primary">Save</button>
        </div>
    </div>
}
<div class="col-12">
    @Html.ActionLink("Back to Candidate list", "Index")
</div>
